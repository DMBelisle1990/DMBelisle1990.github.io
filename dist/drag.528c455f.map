{"version":3,"sources":["js/drag.js"],"names":["panels","document","querySelectorAll","desktop","getElementById","dock","addButtonEvents","panel","closeButton","querySelector","maxButton","minButton","addEventListener","style","display","classList","add","remove","forEach","header","e","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","onmousemove","pageX","pageY","from","relatedTarget","toElement","nodeName"],"mappings":"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","file":"drag.528c455f.map","sourceRoot":"..","sourcesContent":["(function() {\n  const panels = document.querySelectorAll('.panel');\n  const desktop = document.getElementById('desktop');\n  const dock = document.getElementById('dock');\n\n  function addButtonEvents(panel) {\n    const closeButton = panel.querySelector('.red');\n    const maxButton = panel.querySelector('.green');\n    const minButton = panel.querySelector('.yellow');\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () => panel.style.display = 'none');\n    }\n\n    if (maxButton) {\n      maxButton.addEventListener('click', () => {\n        dock.style.display = 'none';\n        panel.classList.add('full-screen');\n      });\n    }\n\n    if (minButton) {\n      minButton.addEventListener('click', () => {\n        dock.style.display = 'flex';\n        panel.classList.remove('full-screen');\n      });\n    }\n  }\n\n  // TODO: Add these for mobile\n  // desktop.addEventListener(\"touchstart\", dragStart, false);\n  // desktop.addEventListener(\"touchend\", dragEnd, false);\n\n  /**\n   * Find all panels and make them draggable. If no panel-header is found the panel\n   * itself may be grabbed.\n   */\n  panels.forEach((panel) => {\n    panel.addEventListener('mousedown', () => {\n      panels.forEach((panel) => panel.classList.remove('last-clicked'));\n      panel.classList.add('last-clicked');\n    });\n\n    const header = panel.querySelector('.panel-header') || panel;\n    header.addEventListener('mousedown', (e) => {\n      const shiftX = e.clientX - panel.getBoundingClientRect().left;\n      const shiftY = e.clientY - panel.getBoundingClientRect().top;\n\n      desktop.onmousemove = (e) => {\n        panel.style.left = e.pageX - shiftX + 'px';\n        panel.style.top = e.pageY - shiftY + 'px';\n      };\n    });\n\n    addButtonEvents(panel);\n\n    desktop.addEventListener('mouseup', () => {\n      desktop.onmousemove = null\n    });\n\n    desktop.addEventListener('mouseout', (e) => {\n      const from = e.relatedTarget || e.toElement;\n      if (!from || from.nodeName === 'HTML') {\n        desktop.onmousemove = null;\n      }\n    });\n  });\n\n})();"]}